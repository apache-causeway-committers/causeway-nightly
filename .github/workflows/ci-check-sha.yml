name: Conditional Run based on SHA

on:
  push:
    branches:
      - master
jobs:
  build:
    name: testing 
    runs-on: ubuntu-latest
    env:
      # to be shared amoung all steps of this job
      BASELINE: 2.0.0-M2
      PROJECT_ROOT_PATH: /home/runner/work/isis-nightly/isis
      CI_SCRIPTS_PATH: /home/runner/work/isis-nightly/isis/scripts/ci
      
      NIGHTLY_ROOT_PATH: ${{ github.workspace }}
      NIGHTLY_SCRIPTS_PATH: ${{ github.workspace }}/scripts
      
      # used only for printing
      # would be nice if we could transform the TIMESTAMP string into the REVISION 
      # variable here, but it seems github not yet has any string expression manipulation 
      # operators other than concatination   
      TIMESTAMP: ${{ github.event.head_commit.timestamp }}
      
      # set this to 'deploy' when intent is to push the built packages to a repo, 'install' otherwise
      MVN_STAGES: deploy
      
    steps:
    
    - name: Checkout Nightly
      uses: actions/checkout@v1
      
    - name: Get new Revision if any
      id: revision
      run: bash $NIGHTLY_SCRIPTS_PATH/nightly-new-revision.sh
    
    - name: Checkout Apache Isis
      if: steps.revision.outputs.revision != 'skip'
      uses: actions/checkout@v1
      with:
        repository: apache/isis
        ref: refs/heads/master
        token: ${{ secrets.GitHub_PAT }}
    
    - name: Setup Script Environment
      if: steps.revision.outputs.revision != 'skip'
      env:
        REVISION: ${{ steps.revision.outputs.revision }}
      shell: bash
      # we write the more tricky varibles to the $SHARED_VARS_FILE using the full power of bash commands
      # then we simply print all the (non-secret) variables as used by the build scripts to the console
      run: |
        echo ==============  ENV  =================
        echo BASELINE\: $BASELINE
        echo TIMESTAMP\: $TIMESTAMP
        echo PROJECT_ROOT_PATH\: $PROJECT_ROOT_PATH
        echo CI_SCRIPTS_PATH\: $CI_SCRIPTS_PATH
        echo MVN_STAGES\: $MVN_STAGES
        echo REVISION\: $REVISION
        echo ======================================
        
 
