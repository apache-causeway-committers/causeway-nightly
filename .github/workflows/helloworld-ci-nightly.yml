name: Helloworld (CI Nightly)

on:
  workflow_dispatch:
  schedule:
    ## daily 03:00 (UTC) in the morning
    - cron: '0 3 * * *'


jobs:
  build:
    name: Build, Test, Docker Image, Push, Redeploy
    runs-on: ubuntu-latest
    env:
      APP: isis-app-helloworld

    steps:
    - name: Checkout apache/isis-app-helloworld repo
      uses: actions/checkout@v2.3.3
      with:
        repository: apache/isis-app-helloworld
        ref: refs/heads/master

#    - name: Dump filesystem after checkout isis-app-helloworld repo
#      shell: bash
#      run: |
#        find . -print | grep -v ".git"

    - name: Calculate $REVISION
      id: revision
      run: |
        BASELINE=$(cat pom.xml | grep "<version>" | head -1 | awk -F'>' '{print $2}' | awk -F'<' '{print $1}')
        SHA_ID=$(curl -s --request GET \
                 --url https://api.github.com/repos/apache/$APP/git/ref/heads/master \
                 --header 'content-type: application/json' \
                 | grep sha | cut -d\: -f2 | cut -d\" -f2 | cut -c1-8)
        REVISION=${BASELINE}.$(date +%Y%m%d-%H%M)-${SHA_ID}
        echo "##[set-output name=revision;]${REVISION}"

    - name: Share $REVISION as Environment Variable
      run: echo "REVISION=${{ steps.revision.outputs.revision }}" >> $GITHUB_ENV

    - name: Print $REVISION
      shell: bash
      run: |
        echo ==============  ENV  =================
        echo REVISION            \: $REVISION
        echo ======================================

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Print Maven Version
      run: mvn --version

    - name: Activate Cache for Maven Downloads
      uses: actions/cache@v2
      env:
        cache-name: cache-maven-modules
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Update Maven version
      shell: bash
      run: |
        mvn versions:set -DnewVersion=$REVISION

#    - name: Print pom.xml
#      shell: bash
#      run: |
#        cat pom.xml

    - name: Build with Maven
      shell: bash
      run: |
        mvn install

    - name: Build and Push Docker Image
      shell: bash
      run: |
        mvn -Ddocker jib:build
      env:
        DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

    - name: Checkout current repo
      uses: actions/checkout@v2.3.3

#    - name: Dump filesystem after checkout current repo
#      shell: bash
#      run: |
#        find . -print | grep -v ".git"

    - name: Undeploy from cluster (helloworld.isis.incode.work)
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.K3D_INCODE_WORK_KUBE_CONFIG }}
      with:
        args: delete -f k8s/helloworld/deployment.yaml

    - name: (Re)deploy to cluster (helloworld.isis.incode.work)
      uses: actions-hub/kubectl@master
      env:
        KUBE_CONFIG: ${{ secrets.K3D_INCODE_WORK_KUBE_CONFIG }}
      with:
        args: apply -f k8s/helloworld/deployment.yaml
